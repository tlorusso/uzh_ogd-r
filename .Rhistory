select(BFS = `ï..BFS_NR`, einwohner=INDIKATOR_VALUE,INDIKATOR_JAHR,GEBIET_NAME) %>%
dplyr::filter(INDIKATOR_JAHR==2017 & BFS != 0)
# https://opendata.swiss/de/dataset/nrw-wahleranteil-sp
sp <- read.csv("http://www.web.statistik.zh.ch/ogd/data/KANTON_ZUERICH_124.csv", sep=";", encoding="UTF8") %>%
select(BFS = `ï..BFS_NR`, sp_anteil=INDIKATOR_VALUE,INDIKATOR_JAHR) %>%
dplyr::filter(INDIKATOR_JAHR==2015 & BFS != 0)
# join
plotdata <- mapdata %>%
filter(VORLAGE_NAME=="Bezahlbare Kinderbetreuung") %>%
left_join(sp, by=c("BFS")) %>%
left_join(bev, by=c("BFS")) %>%
mutate_at(vars(sp_anteil,einwohner),as.numeric) %>%
as.data.frame()
mapview::mapview(plotpdata)
mapview::mapview(plotdata)
class(plotdata)
plotdata <- mapdata %>%
filter(VORLAGE_NAME=="Bezahlbare Kinderbetreuung") %>%
left_join(sp, by=c("BFS")) %>%
left_join(bev, by=c("BFS")) %>%
mutate_at(vars(sp_anteil,einwohner),as.numeric) %>%
as.data.frame()
#Labels - Kurzbezeichnung
mapdata <- inner_join(gemeinden,data, by=c("BFS"))
plotdata <- mapdata %>%
filter(VORLAGE_NAME=="Bezahlbare Kinderbetreuung") %>%
left_join(sp, by=c("BFS")) %>%
left_join(bev, by=c("BFS")) %>%
mutate_at(vars(sp_anteil,einwohner),as.numeric)
class(plotdata)
mapview::mapview(plotdata)
DT(plotdata)
DT::datatable(plotdata)
DT::datatable(plotdata)
mapview::mapview(plotdata %>% filter(VORLAGE_NAME=="Bezahlbare Kinderbetreeung"))
mapview::mapview(plotdata %>% filter(VORLAGE_NAME=="Grüne Wirtschaft"))
plotdata %>% filter(VORLAGE_NAME=="Grüne Wirtschaft")
plot(plotdata)
plot(plotdata %>% filter(VORLAGE_NAME=="Grüne Wirtschaft"))
plotdata %>% filter(VORLAGE_NAME=="Grüne Wirtschaft")
View(plotdata)
mapview::mapview(plotdata)
mapview::mapview(plotdata)
mapview::mapview(plotdata,zcol="ja_anteil")
mapview::mapview(plotdata,zcol="ja_anteil")
mapview::mapview(plotdata,zcol="ja_anteil")
mapview::mapview(plotdata,zcol="ja_anteil")
library(statR)
plot <- ggplot(plotdata, aes(sp_anteil,ja_anteil, size=einwohner/1000))+
geom_point(colour="steelblue",alpha=0.8)+
theme_stat()+
guides(fill="FALSE")+
labs(title="Bezahlbare Kinderbetreuung",
subtitle="Zustimmung zur VI bezahlbare Kinderbetreuung vs SP-Wähleranteil (NRW 2015)")
plot
plot <- ggplot(plotdata, aes(sp_anteil,ja_anteil, size=einwohner/1000))+
geom_point(colour="steelblue",alpha=0.8)+
theme_stat()+
geom_smooth("lm")
library(statR)
plot <- ggplot(plotdata, aes(sp_anteil,ja_anteil, size=einwohner/1000))+
geom_point(colour="steelblue",alpha=0.8)+
theme_stat()+
guides(fill="FALSE")+
labs(title="Bezahlbare Kinderbetreuung",
subtitle="Zustimmung zur VI bezahlbare Kinderbetreuung vs SP-Wähleranteil (NRW 2015)")
plot
mapview::mapview(plotdata,zcol="ja_anteil")
mapview::mapview(plotdata,zcol="ja_anteil")
plot(plotdata)
library(mapview)
mapview::mapview(plotdata,zcol="ja_anteil")
if (!require(pacman)) install.packages(pacman)
pacman::p_load(sf,tidyverse,statR)
library(tidyverse)
# library(purrr)
# get json via webservice
data <- jsonlite::fromJSON("http://www.wahlen.zh.ch/abstimmungen/2016_09_25/viewer_download.php")
# transform nested list into dataframe
data <- data %>%
map_dfr(bind_rows) %>%
unnest(VORLAGEN)
# install.packages("ggridges")
data$VORLAGE_NAME <- factor(data$VORLAGE_NAME, labels = c("Grüne Wirtschaft", "AHV Plus", "NDG", "Bezahlbare Kinderbetreuung"))
data <-data %>% mutate_at(vars(JA_STIMMEN_ABSOLUT,NEIN_STIMMEN_ABSOLUT,JA_PROZENT,STIMMBETEILIGUNG),as.numeric)
#aggregiere auf Gemeindeebene
data <-data %>%
group_by(BFS,VORLAGE_NAME) %>%
summarize(ja_anteil=round(sum(JA_STIMMEN_ABSOLUT,na.rm=T)/sum(JA_STIMMEN_ABSOLUT+NEIN_STIMMEN_ABSOLUT,na.rm=T)*100,1))
library(ggridges)
ggplot(data,aes(ja_anteil,VORLAGE_NAME))+
geom_density_ridges(scale = 0.8, fill="steelblue") +
theme_ridges() +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(limits = c(0, 100),breaks=seq(0,100,25))+
labs(x="Ja-Anteil (%)", y="Vorlage")
# get shapefile from here
# http://www.web.statistik.zh.ch/cms_basiskarten/gen_Gemeinde_2018/GEN_A4_GEMEINDEN_SEEN_2018_F.zip
#Gemeindeshapes
gemeinden<- sf::read_sf("GEN_A4_GEMEINDEN_SEEN_2018_F", stringsAsFactors = FALSE) %>% select(BFS,BEZIRK,REGION)
#join municipality-infos to points
mapdata <- left_join(data,gemeinden, by=c("BFS"))
map <- ggplot(mapdata)+
geom_sf(aes(fill=ja_anteil))+
facet_wrap(~VORLAGE_NAME)
#Labels - Kurzbezeichnung
mapdata <- inner_join(gemeinden,data, by=c("BFS"))
mapnew <- ggplot(mapdata)+
geom_sf(aes(fill=ja_anteil),color="white")+
facet_wrap(~VORLAGE_NAME)+
coord_sf(datum = NA)+
labs(fill="Ja (in %)")+
theme_void()+
scale_fill_gradient2(midpoint=50)+
guides(fill = guide_colourbar(barwidth = 0.5, barheight = 10))
mapnew
# https://opendata.swiss/de/dataset/bevolkerung-pers
bev <- read.csv("http://www.web.statistik.zh.ch/ogd/data/KANTON_ZUERICH_133.csv", sep=";", encoding="UTF8") %>%
select(BFS = `ï..BFS_NR`, einwohner=INDIKATOR_VALUE,INDIKATOR_JAHR,GEBIET_NAME) %>%
dplyr::filter(INDIKATOR_JAHR==2017 & BFS != 0)
# https://opendata.swiss/de/dataset/nrw-wahleranteil-sp
sp <- read.csv("http://www.web.statistik.zh.ch/ogd/data/KANTON_ZUERICH_124.csv", sep=";", encoding="UTF8") %>%
select(BFS = `ï..BFS_NR`, sp_anteil=INDIKATOR_VALUE,INDIKATOR_JAHR) %>%
dplyr::filter(INDIKATOR_JAHR==2015 & BFS != 0)
# join
plotdata <- mapdata %>%
filter(VORLAGE_NAME=="Bezahlbare Kinderbetreuung") %>%
left_join(sp, by=c("BFS")) %>%
left_join(bev, by=c("BFS")) %>%
mutate_at(vars(sp_anteil,einwohner),as.numeric)
DT::datatable(plotdata)
library(statR)
plot <- ggplot(plotdata, aes(sp_anteil,ja_anteil, size=einwohner/1000))+
geom_point(colour="steelblue",alpha=0.8)+
theme_stat()+
guides(fill="FALSE")+
labs(title="Bezahlbare Kinderbetreuung",
subtitle="Zustimmung zur VI bezahlbare Kinderbetreuung vs SP-Wähleranteil (NRW 2015)")
plot
library(mapview)
mapview::mapview(plotdata,zcol="ja_anteil")
plot(plotdata)
library(mapview)
mapview::mapview(plotdata)
mapview::mapview(plotdata,zcol="ja_anteil")
sankey <- data.frame(
source = c("a", "b", "c", "d", "c"),
target = c("b", "c", "d", "e", "e"),
value = ceiling(rnorm(5, 10, 1)),
stringsAsFactors = FALSE
)
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart")
library(echarts4r)
sankey <- data.frame(
source = c("a", "b", "c", "d", "c"),
target = c("b", "c", "d", "e", "e"),
value = ceiling(rnorm(5, 10, 1)),
stringsAsFactors = FALSE
)
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart")
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
?e_sankey
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
?e_sankey
sankey %>%
e_charts() %>%
e_sankey(source, target, value, color="#FFFFFF") %>%
e_title("Sankey chart") %>%
sankey %>%
e_charts() %>%
e_sankey(source, target, value, color="#FFFFFF") %>%
e_title("Sankey chart")
sankey %>%
e_charts() %>%
e_sankey(source, target, value, color="#FFFFFF") %>%
e_title("Sankey chart")
?e_series
library(echarts4r)
?e_series
install.github("JohnCoene/echarts4r")
devtools::install_github("JohnCoene/echarts4r")
library(echarts4r)
?e_series
??e_series
devtools::install_github("JohnCoene/echarts4r")
library(echarts4r)
?e_series
library(echarts4r)
library("echarts4r", lib.loc="C:/Program Files/R/R-3.5.0/library")
sankey <- data.frame(
source = c("a", "b", "c", "d", "c"),
target = c("b", "c", "d", "e", "e"),
value = ceiling(rnorm(5, 10, 1)),
stringsAsFactors = FALSE
)
sankey %>%
e_charts() %>%
e_sankey(source, target, value, color="#FFFFFF") %>%
e_title("Sankey chart") %>%
e_series()
sankey <- data.frame(
source = c("a", "b", "c", "d", "c"),
target = c("b", "c", "d", "e", "e"),
value = ceiling(rnorm(5, 10, 1)),
stringsAsFactors = FALSE
)
sankey %>%
e_charts() %>%
e_sankey(source, target, value, color="#FFFFFF") %>%
e_title("Sankey chart")
sankey %>%
e_charts() %>%
e_sankey(source, target, value, color="#FFFFFF") %>%
e_title("Sankey chart") %>%
e_color_range(c("blue","red"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value, color="#FFFFFF") %>%
e_title("Sankey chart") %>%
e_color_range(source, target, c("blue","red"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value, color="#FFFFFF") %>%
e_title("Sankey chart") %>%
e_color_range(sankey, target, c("blue","red"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(sankey, value, c("blue","red"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(sankey, value, c("blue","red","black"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(sankey, target, value, c("blue","red","black"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(sankey, target, c("blue","red","black"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value, color= c("blue","red","black")) %>%
e_title("Sankey chart") %>%
e_color_range(sankey, target, c("blue","red","black"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value, color= c("blue","red","black")) %>%
e_title("Sankey chart")
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(c("a", "b", "c", "d", "c"),c("blue","red","black","white","orange"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(c("blue","red","black","white","orange"),c("a", "b", "c", "d", "c"))
?e_color_range
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(input=c("a", "b", "c", "d", "c"),colors=c("blue","red","black","white","orange"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(sankey, input=c("a", "b", "c", "d", "c"),colors=c("blue","red","black","white","orange"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(sankey, input=c("a", "b", "c", "d", "c"),
colors=c("blue","red","black","white","yellow"))
?e_sankey
colorRampPalette("blues")(6)
sankey %>%
e_charts() %>%
e_sankey(source, target, value,colors=c("blue","red","black","white","yellow","orange")) %>%
e_title("Sankey chart")
sankey %>%
e_charts() %>%
e_sankey(source, target, value,color=c("blue","red","black","white","yellow","orange")) %>%
e_title("Sankey chart")
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(target, input=c("a", "b", "c", "d", "c"),
colors=c("blue","red","black","white","yellow"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(value,target, c("a", "b", "c", "d", "c"),
colors=c("blue","red","black","white","yellow"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(source, input=c("a", "b", "c", "d", "c"),
colors=c("blue","red","black","white","yellow"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(data.nodes, input=c("a", "b", "c", "d", "c"),
colors=c("blue","red","black","white","yellow"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(data.nodes, data.links,
colors=c("blue","red","black","white","yellow"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(source, value,
colors=c("blue","red","black","white","yellow"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(source, value,
colors=c("blue","red","black","white","yellow") lineSytle.color='source')
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(source, value,
colors=c("blue","red","black","white","yellow"), lineSytle.color='source')
sankey %>%
e_charts() %>%
e_sankey(source, target, value,lineSytle.color='source') %>%
e_title("Sankey chart") %>%
e_color_range(source, value,
colors=c("blue","red","black","white","yellow"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value,lineSytle='source') %>%
e_title("Sankey chart") %>%
e_color_range(source, value,
colors=c("blue","red","black","white","yellow"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value,color='source') %>%
e_title("Sankey chart") %>%
e_color_range(source, value,
colors=c("blue","red","black","white","yellow"))
sankey %>%
e_charts() %>%
e_sankey(source, target, value,color='source') %>%
e_title("Sankey chart")
sankey %>%
e_charts() %>%
e_sankey(source, target, value,color='source',series=source) %>%
e_title("Sankey chart")
sankey %>%
e_charts() %>%
e_sankey(source, target, value,series=source) %>%
e_title("Sankey chart")
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart")
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color(color="black")
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color(color=c("black","blue"))
?e_color_range
sankey %>%
e_charts() %>%
e_sankey(source, target, value) %>%
e_title("Sankey chart") %>%
e_color_range(input='data.nodes',output='data.links'.c("black","blue","red","yellow"))
?e_color_range
xaringan:::inf_mr()
devtools::install_github("ropenscilabs/icon")
devtools::install_github("ropenscilabs/icon")
devtools::install_github("ropenscilabs/icon")
Sys.getenv("http_proxy")
Sys.setenv(http_proxy="")
devtools::install_github("ropenscilabs/icon")
Sys.getenv("https_proxy")
?get_dataset
get_dataset("ds_kmi_mixed_freq",show_progress = TRUE)
kofdata::get_dataset("ds_kmi_mixed_freq",show_progress = TRUE)
Sys.setenv(http_proxy="")
Sys.getenv("https_proxy")
Sys.setenv(http_proxy="proxy.kt.ktzh.ch:8080")
Sys.setenv(https_proxy="proxy.kt.ktzh.ch:8080")
kofdata::get_dataset()
kofdata::get_dataset("ds_kmi_mixed_freq",show_progress = TRUE)
Sys.setenv(http_proxy="ktzh.igw.services.zh.ch:8080")
Sys.setenv(https_proxy="ktzh.igw.services.zh.ch:8080")
kofdata::get_dataset("ds_kmi_mixed_freq",show_progress = TRUE)
devtools::install_github("ropenscilabs/icon")
if (!require(pacman)) install.packages(pacman)
# devtools::install_github("statistikZH/statR") -> ggplot2-theme of the statistical office
pacman::p_load(sf,tidyverse,statR)
# get json via webservice, dataset-description : https://opendata.swiss/de/dataset/echtzeitdaten-am-abstimmungstag
data <- jsonlite::fromJSON("http://www.wahlen.zh.ch/abstimmungen/2016_09_25/viewer_download.php")
# transform nested list into dataframe
data <- data %>%
map_dfr(bind_rows) %>%
unnest(VORLAGEN)
# install.packages("ggridges")
data$VORLAGE_NAME <- factor(data$VORLAGE_NAME, labels = c("Grüne Wirtschaft", "AHV Plus", "NDG", "Bezahlbare Kinderbetreuung"))
data <-data %>% mutate_at(vars(JA_STIMMEN_ABSOLUT,NEIN_STIMMEN_ABSOLUT,JA_PROZENT,STIMMBETEILIGUNG),as.numeric)
#aggregiere auf Gemeindeebene
data <-data %>%
group_by(BFS,VORLAGE_NAME) %>%
summarize(ja_anteil=round(sum(JA_STIMMEN_ABSOLUT,na.rm=T)/sum(JA_STIMMEN_ABSOLUT+NEIN_STIMMEN_ABSOLUT,na.rm=T)*100,1))
library(ggridges)
ggplot(data,aes(ja_anteil,VORLAGE_NAME))+
geom_density_ridges(scale = 0.8, fill="steelblue") +
theme_ridges() +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(limits = c(0, 100),breaks=seq(0,100,25))+
labs(x="Ja-Anteil (%)", y="Vorlage")
library(sf)
library(tidyverse)
# get json via webservice, dataset-description : https://opendata.swiss/de/dataset/echtzeitdaten-am-abstimmungstag
data <- jsonlite::fromJSON("http://www.wahlen.zh.ch/abstimmungen/2016_09_25/viewer_download.php")
# transform nested list into dataframe
data <- data %>%
map_dfr(bind_rows) %>%
unnest(VORLAGEN)
# install.packages("ggridges")
data$VORLAGE_NAME <- factor(data$VORLAGE_NAME, labels = c("Grüne Wirtschaft", "AHV Plus", "NDG", "Bezahlbare Kinderbetreuung"))
data <-data %>% mutate_at(vars(JA_STIMMEN_ABSOLUT,NEIN_STIMMEN_ABSOLUT,JA_PROZENT,STIMMBETEILIGUNG),as.numeric)
#aggregiere auf Gemeindeebene
data <-data %>%
group_by(BFS,VORLAGE_NAME) %>%
summarize(ja_anteil=round(sum(JA_STIMMEN_ABSOLUT,na.rm=T)/sum(JA_STIMMEN_ABSOLUT+NEIN_STIMMEN_ABSOLUT,na.rm=T)*100,1))
library(ggridges)
ggplot(data,aes(ja_anteil,VORLAGE_NAME))+
geom_density_ridges(scale = 0.8, fill="steelblue") +
theme_ridges() +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(limits = c(0, 100),breaks=seq(0,100,25))+
labs(x="Ja-Anteil (%)", y="Vorlage")
# get shapefile from :
# http://www.web.statistik.zh.ch/cms_basiskarten/gen_Gemeinde_2018/GEN_A4_GEMEINDEN_SEEN_2018_F.zip
#Gemeindeshapes
gemeinden<- sf::read_sf("GEN_A4_GEMEINDEN_SEEN_2018_F", stringsAsFactors = FALSE) %>% select(BFS,BEZIRK,REGION)
#join municipality-infos to points
mapdata <- left_join(data,gemeinden, by=c("BFS"))
map <- ggplot(mapdata)+
geom_sf(aes(fill=ja_anteil))+
facet_wrap(~VORLAGE_NAME)
map
#Labels - Kurzbezeichnung
mapdata <- inner_join(gemeinden,data, by=c("BFS"))
mapnew <- ggplot(mapdata)+
geom_sf(aes(fill=ja_anteil),color="white")+
facet_wrap(~VORLAGE_NAME)+
coord_sf(datum = NA)+
labs(fill="Ja (in %)")+
theme_void()+
scale_fill_gradient2(midpoint=50)+
guides(fill = guide_colourbar(barwidth = 0.5, barheight = 10))
# https://opendata.swiss/de/dataset/bevolkerung-pers
bev <- read.csv("http://www.web.statistik.zh.ch/ogd/data/KANTON_ZUERICH_133.csv", sep=";", encoding="UTF8") %>%
select(BFS = `ï..BFS_NR`, einwohner=INDIKATOR_VALUE,INDIKATOR_JAHR,GEBIET_NAME) %>%
dplyr::filter(INDIKATOR_JAHR==2017 & BFS != 0)
# https://opendata.swiss/de/dataset/nrw-wahleranteil-sp
sp <- read.csv("http://www.web.statistik.zh.ch/ogd/data/KANTON_ZUERICH_124.csv", sep=";", encoding="UTF8") %>%
select(BFS = `ï..BFS_NR`, sp_anteil=INDIKATOR_VALUE,INDIKATOR_JAHR) %>%
dplyr::filter(INDIKATOR_JAHR==2015 & BFS != 0)
# join
plotdata <- mapdata %>%
filter(VORLAGE_NAME=="Bezahlbare Kinderbetreuung") %>%
left_join(sp, by=c("BFS")) %>%
left_join(bev, by=c("BFS")) %>%
mutate_at(vars(sp_anteil,einwohner),as.numeric)
# devtools::install_github("statistikZH/statR")
library(statR)
plot <- ggplot(plotdata, aes(sp_anteil,ja_anteil, size=einwohner/1000))+
geom_point(colour="steelblue",alpha=0.8)+
theme_stat()+
guides(fill="FALSE")+
labs(title="Bezahlbare Kinderbetreuung",
subtitle="Zustimmung zur VI bezahlbare Kinderbetreuung vs SP-Wähleranteil (NRW 2015)")
plot
head(mapdata)
